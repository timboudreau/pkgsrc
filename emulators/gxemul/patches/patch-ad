$NetBSD: patch-ad,v 1.3 2019/01/04 13:35:16 ryoon Exp $

patch to fix big-endian mips support from matt@netbsd.org

diff -rup src/cpus/cpu_mips_coproc.cc src/cpus/cpu_mips_coproc.cc
--- src/cpus/cpu_mips_coproc.cc.orig	2018-12-07 06:29:22.000000000 +0000
+++ src/cpus/cpu_mips_coproc.cc
@@ -2029,6 +2029,13 @@ void coproc_function(struct cpu *cpu, st
 
 	if (cpnr < 2 && (((function & 0x03e007f8) == (COPz_MTCz << 21))
 	              || ((function & 0x03e007f8) == (COPz_DMTCz << 21)))) {
+		tmpvalue = cpu->cd.mips.gpr[rt];
+		if (copz == COPz_MTCz) {
+			/*  Sign-extend:  */
+			tmpvalue &= 0xffffffffULL;
+			if (tmpvalue & 0x80000000ULL)
+				tmpvalue |= 0xffffffff00000000ULL;
+		}
 		if (unassemble_only) {
 			debug("%s%i\t%s,", copz==COPz_DMTCz? "dmtc" : "mtc",
 			    cpnr, regnames[rt]);
@@ -2038,16 +2045,10 @@ void coproc_function(struct cpu *cpu, st
 				debug("r%i", rd);
 			if (function & 7)
 				debug(",%i", (int)(function & 7));
+			debug(" [%016llx]", (long long)tmpvalue);
 			debug("\n");
 			return;
 		}
-		tmpvalue = cpu->cd.mips.gpr[rt];
-		if (copz == COPz_MTCz) {
-			/*  Sign-extend:  */
-			tmpvalue &= 0xffffffffULL;
-			if (tmpvalue & 0x80000000ULL)
-				tmpvalue |= 0xffffffff00000000ULL;
-		}
 		coproc_register_write(cpu, cpu->cd.mips.coproc[cpnr], rd,
 		    &tmpvalue, copz == COPz_DMTCz, function & 7);
 		return;
