$NetBSD: patch-CMakeLists.txt,v 1.5 2019/04/19 07:15:36 adam Exp $

Add version number to shared libraries.

--- CMakeLists.txt.orig	2019-04-15 22:38:24.000000000 +0000
+++ CMakeLists.txt
@@ -203,7 +203,7 @@ function(protobuf_generate_grpc_cpp)
              "${_gRPC_PROTO_GENS_DIR}/${RELFIL_WE}_mock.grpc.pb.h"
              "${_gRPC_PROTO_GENS_DIR}/${RELFIL_WE}.pb.cc"
              "${_gRPC_PROTO_GENS_DIR}/${RELFIL_WE}.pb.h"
-      COMMAND ${_gRPC_PROTOBUF_PROTOC_EXECUTABLE}
+      COMMAND env LD_LIBRARY_PATH=${CMAKE_BINARY_DIR} ${_gRPC_PROTOBUF_PROTOC_EXECUTABLE}
       ARGS --grpc_out=generate_mock_code=true:${_gRPC_PROTO_GENS_DIR}
            --cpp_out=${_gRPC_PROTO_GENS_DIR}
            --plugin=protoc-gen-grpc=${_gRPC_CPP_PLUGIN}
@@ -741,6 +741,7 @@ add_library(address_sorting
   third_party/address_sorting/address_sorting_posix.c
   third_party/address_sorting/address_sorting_windows.c
 )
+set_target_properties(address_sorting PROPERTIES VERSION ${PACKAGE_VERSION} SOVERSION 1)
 
 if(WIN32 AND MSVC)
   set_target_properties(address_sorting PROPERTIES COMPILE_PDB_NAME "address_sorting"
@@ -874,6 +875,7 @@ add_library(gpr
   src/core/lib/profiling/basic_timers.cc
   src/core/lib/profiling/stap_timers.cc
 )
+set_target_properties(gpr PROPERTIES VERSION ${PACKAGE_VERSION} SOVERSION 1)
 
 if(WIN32 AND MSVC)
   set_target_properties(gpr PROPERTIES COMPILE_PDB_NAME "gpr"
@@ -1295,6 +1297,7 @@ add_library(grpc
   src/core/ext/filters/workarounds/workaround_utils.cc
   src/core/plugin_registry/grpc_plugin_registry.cc
 )
+set_target_properties(grpc PROPERTIES VERSION ${PACKAGE_VERSION} SOVERSION 1)
 
 if(WIN32 AND MSVC)
   set_target_properties(grpc PROPERTIES COMPILE_PDB_NAME "grpc"
@@ -1687,6 +1690,7 @@ add_library(grpc_cronet
   src/core/tsi/transport_security_grpc.cc
   src/core/plugin_registry/grpc_cronet_plugin_registry.cc
 )
+set_target_properties(grpc_cronet PROPERTIES VERSION ${PACKAGE_VERSION} SOVERSION 1)
 
 if(WIN32 AND MSVC)
   set_target_properties(grpc_cronet PROPERTIES COMPILE_PDB_NAME "grpc_cronet"
@@ -2679,6 +2683,7 @@ add_library(grpc_unsecure
   src/core/ext/filters/workarounds/workaround_utils.cc
   src/core/plugin_registry/grpc_unsecure_plugin_registry.cc
 )
+set_target_properties(grpc_unsecure PROPERTIES VERSION ${PACKAGE_VERSION} SOVERSION 1)
 
 if(WIN32 AND MSVC)
   set_target_properties(grpc_unsecure PROPERTIES COMPILE_PDB_NAME "grpc_unsecure"
@@ -2912,6 +2917,7 @@ add_library(grpc++
   third_party/nanopb/pb_encode.c
   src/cpp/codegen/codegen_init.cc
 )
+set_target_properties(grpc++ PROPERTIES VERSION ${PACKAGE_VERSION} SOVERSION 1)
 
 if(WIN32 AND MSVC)
   set_target_properties(grpc++ PROPERTIES COMPILE_PDB_NAME "grpc++"
@@ -3505,6 +3511,7 @@ add_library(grpc++_cronet
   src/core/ext/transport/chttp2/server/chttp2_server.cc
   src/core/ext/filters/census/grpc_context.cc
 )
+set_target_properties(grpc++_cronet PROPERTIES VERSION ${PACKAGE_VERSION} SOVERSION 1)
 
 if(WIN32 AND MSVC)
   set_target_properties(grpc++_cronet PROPERTIES COMPILE_PDB_NAME "grpc++_cronet"
@@ -3792,6 +3799,7 @@ add_library(grpc++_error_details
   ${_gRPC_PROTO_GENS_DIR}/src/proto/grpc/status/status.grpc.pb.h
   src/cpp/util/error_details.cc
 )
+set_target_properties(grpc++_error_details PROPERTIES VERSION ${PACKAGE_VERSION} SOVERSION 1)
 
 if(WIN32 AND MSVC)
   set_target_properties(grpc++_error_details PROPERTIES COMPILE_PDB_NAME "grpc++_error_details"
@@ -3925,6 +3933,7 @@ add_library(grpc++_reflection
   ${_gRPC_PROTO_GENS_DIR}/src/proto/grpc/reflection/v1alpha/reflection.pb.h
   ${_gRPC_PROTO_GENS_DIR}/src/proto/grpc/reflection/v1alpha/reflection.grpc.pb.h
 )
+set_target_properties(grpc++_reflection PROPERTIES VERSION ${PACKAGE_VERSION} SOVERSION 1)
 
 if(WIN32 AND MSVC)
   set_target_properties(grpc++_reflection PROPERTIES COMPILE_PDB_NAME "grpc++_reflection"
@@ -4473,6 +4482,7 @@ add_library(grpc++_unsecure
   third_party/nanopb/pb_encode.c
   src/cpp/codegen/codegen_init.cc
 )
+set_target_properties(grpc++_unsecure PROPERTIES VERSION ${PACKAGE_VERSION} SOVERSION 1)
 
 if(WIN32 AND MSVC)
   set_target_properties(grpc++_unsecure PROPERTIES COMPILE_PDB_NAME "grpc++_unsecure"
@@ -4874,6 +4884,7 @@ add_library(grpc_plugin_support
   src/compiler/python_generator.cc
   src/compiler/ruby_generator.cc
 )
+set_target_properties(grpc_plugin_support PROPERTIES VERSION 2.0.0 SOVERSION 2)
 
 if(WIN32 AND MSVC)
   set_target_properties(grpc_plugin_support PROPERTIES COMPILE_PDB_NAME "grpc_plugin_support"
@@ -4936,6 +4947,7 @@ add_library(grpcpp_channelz
   ${_gRPC_PROTO_GENS_DIR}/src/proto/grpc/channelz/channelz.pb.h
   ${_gRPC_PROTO_GENS_DIR}/src/proto/grpc/channelz/channelz.grpc.pb.h
 )
+set_target_properties(grpcpp_channelz PROPERTIES VERSION ${PACKAGE_VERSION} SOVERSION 1)
 
 if(WIN32 AND MSVC)
   set_target_properties(grpcpp_channelz PROPERTIES COMPILE_PDB_NAME "grpcpp_channelz"
@@ -5478,6 +5490,7 @@ if (gRPC_BUILD_CSHARP_EXT)
 add_library(grpc_csharp_ext SHARED
   src/csharp/ext/grpc_csharp_ext.c
 )
+set_target_properties(grpc_csharp_ext PROPERTIES VERSION ${PACKAGE_VERSION} SOVERSION 1)
 
 if(WIN32 AND MSVC)
   set_target_properties(grpc_csharp_ext PROPERTIES COMPILE_PDB_NAME "grpc_csharp_ext"
